package me.jeremyhe.getdone.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import me.jeremyhe.getdone.dao.Task;
import me.jeremyhe.getdone.dao.HistoryTask;
import me.jeremyhe.getdone.dao.ShareTask;
import me.jeremyhe.getdone.dao.Friend;

import me.jeremyhe.getdone.dao.TaskDao;
import me.jeremyhe.getdone.dao.HistoryTaskDao;
import me.jeremyhe.getdone.dao.ShareTaskDao;
import me.jeremyhe.getdone.dao.FriendDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig taskDaoConfig;
    private final DaoConfig historyTaskDaoConfig;
    private final DaoConfig shareTaskDaoConfig;
    private final DaoConfig friendDaoConfig;

    private final TaskDao taskDao;
    private final HistoryTaskDao historyTaskDao;
    private final ShareTaskDao shareTaskDao;
    private final FriendDao friendDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        historyTaskDaoConfig = daoConfigMap.get(HistoryTaskDao.class).clone();
        historyTaskDaoConfig.initIdentityScope(type);

        shareTaskDaoConfig = daoConfigMap.get(ShareTaskDao.class).clone();
        shareTaskDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        taskDao = new TaskDao(taskDaoConfig, this);
        historyTaskDao = new HistoryTaskDao(historyTaskDaoConfig, this);
        shareTaskDao = new ShareTaskDao(shareTaskDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);

        registerDao(Task.class, taskDao);
        registerDao(HistoryTask.class, historyTaskDao);
        registerDao(ShareTask.class, shareTaskDao);
        registerDao(Friend.class, friendDao);
    }
    
    public void clear() {
        taskDaoConfig.getIdentityScope().clear();
        historyTaskDaoConfig.getIdentityScope().clear();
        shareTaskDaoConfig.getIdentityScope().clear();
        friendDaoConfig.getIdentityScope().clear();
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

    public HistoryTaskDao getHistoryTaskDao() {
        return historyTaskDao;
    }

    public ShareTaskDao getShareTaskDao() {
        return shareTaskDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

}
